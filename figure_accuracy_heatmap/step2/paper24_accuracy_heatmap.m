%INPUT
%**** option: IBSI **** 
RawData = readtable ('C:\WORK\AXLE\nyxusfigures2025\figuretools_accuracy_heatmap\output1\__raw_heatmap_data__IBSI.csv');
texodir = 'grafix/autoGeneratedFeatureHeatmaps_IBSI';
odir = 'C:\WORK\AXLE\nyxusfigures2025\figuretools_accuracy_heatmap\output2\ibsi';

%**** option:NOIBSI ****
%{
RawData = readtable ('C:\WORK\AXLE\nyxusfigures2025\figuretools_accuracy_heatmap\output1\__raw_heatmap_data__NOIBSI.csv');
texodir = 'grafix/autoGeneratedFeatureHeatmaps_NOIBSI';
odir = 'C:\WORK\AXLE\nyxusfigures2025\figuretools_accuracy_heatmap\output2\noibsi';
%}

% see prev Python step
SPACER=[-1 -1 -1 -1 -1 -1 -1 -1]
NOTAVAILABLE=[-2 -2 -2 -2 -2 -2 -2 -2]

Nf = size (RawData, 1);	% Number of features
Nsw = size (RawData, 2) -2 ;	% Number of feature extractors. -2 because 1st column is 'npp' and last column is feature code ('altname')

% Good colormaps: dense=ice, imola, turbo, romao, roma (best sensitive!),
%		spectral (sensitive!)
cm = roma(256);
zoLen = 1;
cm (256, :) = repmat ([.1 .1 .1] , zoLen, 1);	% gridlines
cm (1, :) = repmat ([1 1 1] , zoLen, 1);	% n/a space

% Heatmap side, pixels
hmside = 50;

% Color bar
n_grades = 10;
grade_h = 60;
Hcbar = zeros (n_grades*grade_h, hmside*2);
minval = -1;
maxval = +1;
valrange = maxval - minval;
for i=1:n_grades
	a = (i-1)*grade_h ;
	b = a + grade_h ;
	Hcbar (a+1:b , :) = 255 / n_grades * (n_grades-i+1);
end
f = [odir '\colorbarvert.png']
imwrite (Hcbar , cm, f);

% Colormap
% Iterate feature extractors
for i = 1 : Nf
	% Generate values
	%--- F_raw = -1. + 2. .* rand(Nsw, 1);
	F_raw = RawData {i, 2:9}; % 2:9 because 1 is special column, column 10 is 'altname'

	if F_raw == SPACER
		continue;
	end
	
	if F_raw == NOTAVAILABLE
		f2del = [odir '\fhmap' num2str(i) '.png']
		delete (f2del);
		continue
	end
		
	% Check if the data is valid corr() values
	fmin = min(min(F_raw));
	fmax = max(max(F_raw));
	if fmin < minval || fmax > maxval
		error (['--- data range error! --- ' 'min():' num2str(fmin) ' <' num2str(minval) ' or max():' num2str(fmax) ' >' num2str(maxval)] );
		return;
	end
	
	% Save as image file
	Hnyx = zeros (Nsw*hmside, hmside);
	for isw=1:Nsw
		Hnyx((isw-1)*hmside+1:(isw-1)*hmside+hmside , :) = F_raw(isw);
	end
	
	f = [odir '\fhmap' num2str(i) '.png']
	imwrite (Hnyx , cm, f);
	
	% display
	%{
	if ishandle(1)
		close(1)
	end
	figure(1); 	
	imagesc(Hnyx); 
	axis('square'); 
	title(sprintf('%d',i));
	%}
	
	%--grayscale colormap-- imwrite (Hnyx, f);

	%--- Colormap options ---
	% colormap('cividis') +
	% colormap('deep') + but too grayscale
	% colormap('ember') - same as inferno
	% colormap('lavender') +/- but dark
	% colormap('plasma') + brighter version of inferno
	% colormap('magma')	+ slightly brighter inferno
	% jet
	% bone
		
	HnyxS = (Hnyx + 1.0) ./ 2.0;	% assuming Hnyx be [-1 +1]
	HnyxRGB = HnyxS .* 255;
	
	% -- gridlines
	HnyxRGB(:,1) = 256;	% left
	HnyxRGB(:,hmside) = 256;	% right
	HnyxRGB(1,:) = 256;	% top
	%HnyxRGB(size(HnyxRGB,1),:) = 256;	% bottom
	for b=1:8	% stair
		HnyxRGB(b*hmside,:) = 256;	
	end

	% save to disk
	imwrite (HnyxRGB , cm, f);

end

% header
fid = fopen ([odir '\heatmap_figure_code.tex'], 'w');
fprintf (fid, '%%--- GENERATED BY fig5_feature_heatmap.m ---\n');
%{
fprintf (fid, [				...
	'\\begin{figure} \n'	...
	'\\centering \n'		...
	'%%---\n'				...
	]);
%}

% color bar
fprintf (fid, '%%--- COLOR BAR ---\n');
fprintf (fid, '\\hspace{5px} \n');
fprintf (fid, '\\begin{subfigure}{\\wid\\textwidth} \n');
fprintf (fid, ['    \\includegraphics[height=70px]{' texodir '/colorbarvert.png} \n']);
fprintf (fid, '\\end{subfigure} \n');
fprintf (fid, '\\begin{subfigure}{\\wid\\textwidth} \n');
fprintf (fid, ['    \\includegraphics[height=70px]{' texodir '/colorbarannot.png} \n']);
fprintf (fid, '\\end{subfigure} \n');

% row legends (software)
fprintf (fid, '%%--- ROW LEGENDS ---\n');
fprintf (fid, '\\begin{subfigure}{\\wid\\textwidth} \n');
fprintf (fid, ['    \\includegraphics[height=50px]{' texodir '/otherfe.png} \n']);
fprintf (fid, '\\end{subfigure} \n');
fprintf (fid, '\\hspace{10px} \n');

% body
fprintf (fid, '%%--- BODY ---\n');
for i = 1 : Nf

	% skip empty cells
	F_raw = RawData {i, 2:9}; 
	if F_raw == NOTAVAILABLE
		continue;
	end	
	
	feaName = cell2mat(RawData{i,10});
	if length(strfind(feaName, '!') >0)	% feaName examples: 'intensity/Kurtosis' (regular feature) or 'banner_inten.png' (name of a feature group banner image file)
		if length(strfind(feaName, '!image=') >0)
			% image banner
			bannerFname = feaName(length('!image=')+1 : end)
			fprintf (fid, '%%--- IMAGE BANNER ---\n');
			fprintf (fid, '\\begin{subfigure}{\\wid\\textwidth} \n');
			fprintf (fid, ['    \\includegraphics[height=50px]{' texodir '/%s} \n'], bannerFname);
			fprintf (fid, '\\end{subfigure} \n');
			fprintf (fid, '\\hspace{\\hsp} \n');
			fprintf (fid, '%%---\n');
		else
			% text banner
			bannerText = feaName(length('!text=')+1 : end)
			fprintf (fid, '%%--- TEXT BANNER ---\n');
			fprintf (fid, '\\begin{subfigure}{\\wid\\textwidth} \n');
			fprintf (fid, '    \\centering \n');
			fprintf (fid, '    \\caption{\\small \\sffamily \\rotatebox{90}{~%s}} \n', bannerText);
			fprintf (fid, '    %% \\vspace{\\vsp} \n');
			fprintf (fid, '\\end{subfigure} \n');
			fprintf (fid, '\\hspace{\\hsp} \n');
			fprintf (fid, '%%---\n');
		end
	else
		% heatmap
		fprintf (fid, '\\begin{subfigure}{\\wid\\textwidth} \n');
		fprintf (fid, '    \\centering \n');
		fprintf (fid, '    \\caption{\\tiny \\sffamily \\rotatebox{90}{\\fontselector ~%s}} \n', feaName);
		fprintf (fid, '    \\vspace{\\vsp} \n');	
		fprintf (fid, ['    \\includegraphics[width=\\hmapwid]{' texodir '/fhmap%d.png} \n'], i);
		%  \label{fig:sub1}
		fprintf (fid, [...
			'\\end{subfigure} \n'	...
			'\\hspace{\\hsp} \n']);
        
        %--diagnostics--
        [feaName '=' num2str(i)]
	end
end

% tail
%{
fprintf (fid, [...
	'\\caption{figureCaption} \n'	...
	'\\label{fig:test} \n'			...
	'\\end{figure} \n'				...
	'%%---\n'				...
	]);
%}
fprintf (fid, '%%--- END OF GENERATED ---\n');

fclose(fid);

%
%==== Displaying the colorbar:
%{
figure; 
imagesc(Hnyx); 
axis ('square');
%--- colormap('jet'); % <-- continuous
colormap(jet(8)); % <--discrete based on https://www.mathworks.com/matlabcentral/answers/738107-how-to-make-a-discrete-colorbar-with-specified-intervals
cb = colorbar('Ticks',[0, .25, .5, .75, 1], 'TickLabels',{'0','0.25','0.5','0.75','1'}); 
caxis([0 +1]); 
cb.FontSize=25; 
cb.Label.String = '\rho_{ ( nyxus , other ) }'; 
cb.Location='eastoutside';
%}
%
